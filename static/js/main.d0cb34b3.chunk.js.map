{"version":3,"sources":["Pages/AboutPage/AboutPage.jsx","Pages/UserPage/UserPage.jsx","Components/Search/Search.jsx","Components/Tabs/Tabs.jsx","Components/UserItem/UserItem.jsx","Components/Users/Users.jsx","Components/Inputs/TextInput/TextInput.jsx","App.js","index.js"],"names":["AboutPage","className","map","cur","i","UserPage","getUser","getUserRepos","user","repos","languages","loading","repoLoading","match","useEffect","params","username","to","src","avatar_url","style","whiteSpace","login","name","location","bio","blog","href","html_url","followers","following","public_repos","public_gists","hireable","dayjs","created_at","format","length","Object","entries","percentages","index","key","value","width","repo","description","languages_fetched","keys","updated_at","stargazers_count","forks_count","Search","getUsers","clearUsers","showClear","useState","query","input","setInput","onSubmit","e","preventDefault","alert","onChange","handleChange","label","onClick","Tabs","exact","activeClassName","UserItem","Users","users","id","TextInput","target","type","placeholder","CLIENT_ID","CLIENT_SECRET","App","setUsers","setUser","setRepos","langs","total","setLanguages","setLoading","setRepoLoading","a","fetch","call","json","items","getUserReposLanguages","newLangState","languages_url","call_lang","json_lang","forEach","entry","langName","langCount","hasOwnProperty","Math","abs","toFixed","path","render","routerProps","extend","duration","relativeTime","locale","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d0cb34b3.chunk.js","sourcesContent":["import React from 'react'\n\nconst AboutPage = () => {\n  const stack = ['React', 'Router', 'Day.js', 'GitHub API']\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n        <div className=\"bo-card\">\n          <div className=\"bo-card-head\">\n            <h2 className=\"text-center\">Stack</h2>\n          </div>\n          <div className=\"bo-card-body\">\n            <p className=\"mb-3\">This test project is build with:</p>\n            <ul className=\"text-list\">\n              {\n                stack.map((cur, i) => (\n                  <li key={i}>{cur}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AboutPage\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport dayjs from 'dayjs'\n\nconst UserPage = ({ getUser, getUserRepos, user, repos, languages, loading, repoLoading, match }) => {\n  useEffect(() => {\n    getUser(match.params.username)\n    getUserRepos(match.params.username)\n  }, [])\n\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <Link to=\"/\" className=\"text-clickable\">Back to Search</Link>\n      </div>\n      <div className=\"col-12 col-lg-4\">\n        <div className=\"bo-card\">\n          <div className=\"bo-card-head bg-gray-4\">\n            <img src={user.avatar_url} className=\"bo-photo\" />\n          </div>\n          <div className=\"bo-card-body\">\n            <table className=\"table\" style={{ whiteSpace: 'unset' }}>\n              <tbody>\n                <tr>\n                  <td>Username</td>\n                  <td>{user.login}</td>\n                </tr>\n                <tr>\n                  <td>Name</td>\n                  <td>{user.name}</td>\n                </tr>\n                <tr>\n                  <td>Location</td>\n                  <td>{user.location}</td>\n                </tr>\n                <tr>\n                  <td>Bio</td>\n                  <td>{user.bio}</td>\n                </tr>\n                <tr>\n                  <td>Blog</td>\n                  <td>{user.blog}</td>\n                </tr>\n                <tr>\n                  <td>Link</td>\n                  <td><a href={user.html_url} className=\"text-clickable\">Open on GitHub</a></td>\n                </tr>\n                <tr>\n                  <td>Followers</td>\n                  <td>{user.followers}</td>\n                </tr>\n                <tr>\n                  <td>Following</td>\n                  <td>{user.following}</td>\n                </tr>\n                <tr>\n                  <td>Repos</td>\n                  <td>{user.public_repos}</td>\n                </tr>\n                <tr>\n                  <td>Gists</td>\n                  <td>{user.public_gists}</td>\n                </tr>\n                <tr>\n                  <td>Hireable</td>\n                  <td>{user.hireable ? 'Yes' : 'No'}</td>\n                </tr>\n                <tr>\n                  <td>Since</td>\n                  <td>{dayjs(user.created_at).format('DD.MM.YYYY')}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-12 col-lg-8\">\n        <h2 className=\"mb-4\">Languages in {repos.length} recently updated repos</h2>\n        {\n          Object.entries(languages.percentages).length !== 0 ?\n          Object.entries(languages.percentages).map(([key, value], index) => (\n            <div key={index} className=\"bo-progress text-medium\">\n              {key}: {value} %\n              <div className=\"bo-progress-bar\">\n                <div className=\"bo-progress-bar-inner\" style={{ width: `${value}%` }}></div>\n              </div>\n            </div>\n          )) :\n          <div className=\"text-danger\">Language percentages not calculated.</div>\n        }\n        <h2 className=\"my-4\">{repos.length} recently updated repos</h2>\n        {repoLoading && <div>Repo loading...</div>}\n        <div className=\"row\">\n          {\n            repos.map((repo, index) => (\n              <div key={index} className=\"col-12\">\n                <div className=\"bo-card\">\n                  <div className=\"bo-card-head bg-gray-4\">\n                    <div className=\"text-center\">\n                      <h3>\n                        {repo.name}\n                      </h3>\n                      <p className=\"mt-2\">\n                        {repo.description || 'No description'}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"bo-card-body\">\n                    <table className=\"table\" style={{ whiteSpace: 'unset' }}>\n                      <tbody>\n                        <tr>\n                          <td>Link</td>\n                          <td><a href={repo.html_url} className=\"text-clickable\">Open on GitHub</a></td>\n                        </tr>\n                        <tr>\n                          <td>Languages</td>\n                          <td>\n                            {\n                              repo.languages_fetched\n                              ? Object.keys(repo.languages_fetched).map((cur, i) => (i !== 0 ? ', ' : '') + cur)\n                              : <div className=\"text-danger\">Languages not fetched.</div>\n                            }\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>Created</td>\n                          <td>{dayjs(repo.created_at).format('DD.MM.YYYY')}</td>\n                        </tr>\n                        <tr>\n                          <td>Updated</td>\n                          <td>{dayjs(repo.updated_at).format('DD.MM.YYYY')}</td>\n                        </tr>\n                        <tr>\n                          <td>Stars</td>\n                          <td>{repo.stargazers_count}</td>\n                        </tr>\n                        <tr>\n                          <td>Forks</td>\n                          <td>{repo.forks_count}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserPage\n","import React, { useEffect, useState } from 'react'\n\nimport { TextInput } from 'Components'\n\nconst Search = ({ getUsers, clearUsers, showClear }) => {\n  const [input, setInput] = useState({ query: 'facebook' })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (input.query !== '') {\n      getUsers(input.query)\n    } else {\n      alert('Input is empty')\n    }\n  }\n\n  const handleChange = (name, value) => setInput({ [name]: value })\n\n  const handleClear = () => {\n    setInput({ query: '' })\n\n    clearUsers()\n  }\n\n  useEffect(() => {\n    getUsers('facebook')\n  }, [])\n\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-5\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-12 col-lg\">\n          <TextInput\n            value={input.query}\n            onChange={(name, value) => handleChange(name, value)}\n            label=\"Username\"\n            name=\"query\"\n          />\n        </div>\n        <div className=\"col-12 col-lg-auto\">\n          <button className=\"bo-button\">Fetch Users</button>\n        </div>\n        {\n          showClear\n          ? (\n            <div className=\"col-12 col-lg-auto\">\n              <button onClick={handleClear} className=\"bo-button is-secondary\">Clear Users</button>\n            </div>\n          )\n          : null\n        }\n      </div>\n    </form>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Tabs = () => (\n  <div className=\"bo-tabs\">\n    <ul>\n      <li><NavLink exact to=\"/\" activeClassName=\"is-active\">Home</NavLink></li>\n      <li><NavLink exact to=\"/about\" activeClassName=\"is-active\">About</NavLink></li>\n    </ul>\n  </div>\n)\n\nexport default Tabs\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst UserItem = ({ user: { login, avatar_url } }) => (\n  <div className=\"col-12 col-lg-3\">\n    <div className=\"bo-card\">\n      <div className=\"bo-card-head bg-gray-4\">\n        <img src={avatar_url} className=\"bo-photo\" />\n      </div>\n      <div className=\"bo-card-body\">\n        <div className=\"text-center\">\n          <h3 className=\"mb-2\">{login}</h3>\n          <Link to={`/user/${login}`} className=\"bo-button is-small\">Open Profile</Link>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default UserItem\n","import React from 'react'\n\nimport { UserItem } from 'Components'\n\nconst Users = ({ users, loading }) => {\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <div className=\"row\">\n      {\n        users.map((user) => (\n          <UserItem key={user.id} user={user} />\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Users\n","import React from 'react'\n\nconst TextInput = ({ value, onChange, label, name }) => {\n  const handleChange = (e) => onChange(name, e.target.value)\n\n  return (\n    <div className=\"input\">\n      <input value={value} onChange={handleChange} type=\"text\" placeholder=\" \" />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nexport default TextInput\n","import React, { useState } from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { AboutPage, UserPage } from 'Pages'\nimport { Search, Tabs, Users } from 'Components'\nimport 'App.css'\n\nconst CLIENT_ID = '2e6cadfa0bad3a9e3b4e'\nconst CLIENT_SECRET = '33967e273d64b7199f91f4298959dccfa0544bbe'\n\nconst App = () => {\n  const [users, setUsers] = useState([])\n  const [user, setUser] = useState({})\n  const [repos, setRepos] = useState([])\n  const [languages, setLanguages] = useState({ langs: {}, percentages: {}, total: 0 })\n  const [loading, setLoading] = useState(false)\n  const [repoLoading, setRepoLoading] = useState(false)\n\n  const getUsers = async (query) => {\n    setLoading(true)\n\n    const call = await fetch(`https://api.github.com/search/users?q=${query}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`)\n    const json = await call.json()\n\n    setUsers(json.items)\n    setLoading(false)\n  }\n\n  const getUser = async (query) => {\n    setLoading(true)\n\n    const call = await fetch(`https://api.github.com/users/${query}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`)\n    const json = await call.json()\n\n    setUser(json)\n    setLoading(false)\n  }\n\n  const getUserRepos = async (query) => {\n    setRepoLoading(true)\n\n    const repo_count = 3;\n    const repo_sort = 'pushed';\n    const repo_direction = 'desc';\n\n    const call = await fetch(`https://api.github.com/users/${query}/repos?per_page=${repo_count}&sort=${repo_sort}&direction=${repo_direction}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`)\n    const json = await call.json()\n\n    await getUserReposLanguages(json)\n\n    setRepos(json)\n    setRepoLoading(false)\n  }\n\n  const getUserReposLanguages = async (json) => {\n    const newLangState = {...languages}\n\n    for (const repo of json) {\n      const call_lang = await fetch(`${repo.languages_url}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`)\n      const json_lang = await call_lang.json()\n\n      repo.languages_fetched = json_lang\n\n      // calc lang\n      Object.entries(repo.languages_fetched).forEach((entry) => {\n        const langName = entry[0]\n        const langCount = entry[1]\n        // add language to state if not already inside. if inside, add only the value\n        if (!(newLangState.langs.hasOwnProperty(langName))) {\n          newLangState.langs[langName] = langCount\n        } else {\n          newLangState.langs[langName] += langCount\n        }\n        // add value to total\n        newLangState.total += langCount\n      })\n    }\n\n    for (const key in newLangState.langs) {\n      if (newLangState.langs.hasOwnProperty(key)) {\n        newLangState.percentages[key] = Math.abs(newLangState.langs[key] / newLangState.total * 100).toFixed(2);\n      }\n    }\n\n    setLanguages(newLangState)\n  }\n\n  const clearUsers = () => {\n    setUsers([])\n    setLoading(false)\n  }\n\n  return (\n    <Router>\n      <Tabs />\n      <div className=\"container mt-5\">\n        <Switch>\n          <Route exact path=\"/\" render={() => (\n            <>\n              <Search\n                getUsers={getUsers}\n                clearUsers={clearUsers}\n                showClear={users.length > 0 ? true : false}\n              />\n              <Users users={users} loading={loading} />\n            </>\n          )} />\n          <Route exact path=\"/user/:username\" render={(routerProps) => (\n            <UserPage\n              getUser={getUser}\n              getUserRepos={getUserRepos}\n              user={user}\n              repos={repos}\n              languages={languages}\n              loading={loading}\n              repoLoading={repoLoading}\n              {...routerProps}\n            />\n          )} />\n          <Route exact path=\"/about\" render={AboutPage} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport dayjs from 'dayjs'\nimport duration from 'dayjs/plugin/duration'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport 'dayjs/locale/de'\n\ndayjs.extend(duration)\ndayjs.extend(relativeTime)\ndayjs.locale('de')\n\nimport App from 'App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}